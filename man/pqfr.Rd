% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dist_funs.R
\name{dqfr}
\alias{dqfr}
\alias{pqfr}
\alias{dqfr_A1I1}
\alias{pqfr_A1B1}
\title{Probability distribution of ratio of quadratic forms}
\usage{
dqfr(quantile, A, m = 100L, log = FALSE, ...)

pqfr(
  quantile,
  A,
  B,
  m = 100L,
  mu = rep.int(0, n),
  Sigma = diag(n),
  lower.tail = TRUE,
  log.p = FALSE,
  tol_zero = .Machine$double.eps * 100,
  tol_sing = .Machine$double.eps * 100,
  ...
)

dqfr_A1I1(
  quantile,
  LA,
  m = 100L,
  check_convergence = c("relative", "strict_relative", "absolute", "none"),
  tol_conv = .Machine$double.eps^(1/4),
  thr_margin = 100
)

pqfr_A1B1(
  quantile,
  A,
  B,
  m = 100L,
  mu = rep.int(0, n),
  check_convergence = c("relative", "strict_relative", "absolute", "none"),
  use_cpp = TRUE,
  cpp_method = c("double", "long_double", "coef_wise"),
  nthreads = 1,
  tol_conv = .Machine$double.eps^(1/4),
  tol_zero = .Machine$double.eps * 100,
  tol_sing = .Machine$double.eps * 100,
  thr_margin = 100
)
}
\arguments{
\item{quantile}{Numeric vector of quantiles \eqn{q}}

\item{A, B}{Argument matrices.  Should be square.  Will be automatically symmetrized
in \code{pqfr()}.}

\item{m}{Order of polynomials at which the series expression is truncated.  \eqn{M}
in Hillier et al. (2009, 2014).}

\item{log, lower.tail, log.p}{Logical; as in regular probability distribution functions.  But these are
for convenience only, and not meant for accuracy.}

\item{...}{Additional arguments passed to internal functions}

\item{mu}{Mean vector \eqn{\bm{\mu}}{\mu} for \eqn{\mathbf{x}}{x}}

\item{Sigma}{Covariance matrix \eqn{\mathbf{\Sigma}}{\Sigma} for
\eqn{\mathbf{x}}{x}}

\item{tol_zero}{Tolerance against which numerical zero is determined.  Used to determine,
e.g., whether \code{mu} is a zero vector, \code{A} or \code{B} equals
the identity matrix, etc.}

\item{tol_sing}{Tolerance against which matrix singularity and rank are determined.  The
eigenvalues smaller than this are considered zero.}

\item{LA}{Eigenvalues of \eqn{\mathbf{A}}{|}}

\item{check_convergence}{Specifies how numerical convergence is checked (see
\code{\link{qfrm}})}

\item{tol_conv}{Tolerance against which numerical convergence of series is checked.  Used
with \code{check_convergence}.}

\item{thr_margin}{Optional argument to adjust the threshold for scaling (see \dQuote{Scaling}
in \code{\link{d1_i}}).  Passed to internal functions (\code{\link{d1_i}},
\code{\link{d2_ij}}, \code{\link{d3_ijk}}) or their \proglang{C++} equivalents.}

\item{use_cpp}{Logical to specify whether the calculation is done with \proglang{C++}
functions via \code{Rcpp}.  \code{TRUE} by default.}

\item{cpp_method}{Method used in \proglang{C++} calculations to avoid numerical
overflow/underflow (see \dQuote{Details} in \code{\link{qfrm}}).  Options:
\itemize{
\item{\code{"double"}: }{default; fastest but prone to underflow in
some conditions}
\item{\code{"long_double"}: }{same algorithm but using the
\code{long double} variable type; robust but slow and
memory-inefficient}
\item{\code{"coef_wise"}: }{coefficient-wise scaling algorithm;
experimental but supposedly robust}
}}

\item{nthreads}{Number of threads used in \proglang{OpenMP}-enabled \proglang{C++}
functions.  \code{0} or any negative value is special and means one-half of
the number of processors detected.  See \dQuote{Multithreading} in
\code{\link{qfrm}}.}
}
\value{
\code{dqfr()} gives the density, and \code{pqfr()} gives the
distribution function or \eqn{p}-values corresponding to \code{quantile}.

\code{dqfr_A1I1()} and \code{pqfr_A1B1()} return a list containing
the following elements:
\itemize{
\item{\code{$d} or \code{$p}: }{probability density or
lower \eqn{p}-value, respectively (\code{sum(terms)})}
\item{\code{$terms}: }{vector of \eqn{0}th to \eqn{m}th order terms}
}
Only \code{$d} or \code{$p} is passed to the external functions.
}
\description{
\code{dqfr()}: \sQuote{Exact} density of the ratio of quadratic forms,
\eqn{\frac{ (\mathbf{x^\mathit{T} A x}) }{ (\mathbf{x^\mathit{T} x}) }
     }{ (x^T A x) / (x^T x) }, where
\eqn{\mathbf{x} \sim N_n(\mathbf{0}_n, \mathbf{I}_n)}{x ~ N_n(0_n, I_n)},
based on Hillier (2001).

\code{pqfr()}: \sQuote{Exact} distribution function of the ratio of
quadratic forms,
\eqn{\frac{ (\mathbf{x^\mathit{T} A x}) }{ (\mathbf{x^\mathit{T} B x}) }
     }{ (x^T A x) / (x^T B x) }, where
\eqn{\mathbf{x} \sim N_n(\bm{\mu}, \mathbf{\Sigma})}{x ~ N_n(\mu, \Sigma)},
based on Forchini (2002, 2005).

\code{dqfr_A1I1()}: internal function used within \code{dqfr()}.

\code{pqfr_A1B1()}: internal function used within \code{pqfr()}.

This functionality is \strong{experimental}.
}
\details{
The user is supposed to use the exported functions \code{dqfr()} and
\code{pqfr()}, which are (pseudo-)vectorized with respect to \code{quantile}
using \code{\link[base]{sapply}()}.  The actual calculations are done by the
\emph{internal} functions \code{dqfr_A1I1()} and \code{pqfr_A1B1()} which only
accommodates a length-one \code{quantile}.  The internal functions skip
most checks on argument structures and do not accommodate \code{Sigma}
(where applicable) to reduce execution time.

Evaluate the probability density or (cumulative) distribution function
as a partial sum of infinite series involving top-order zonal or
invariant polynomials.  The density is from Hillier
(2001, corollary 2), the distribution function for the central case is
from Forchini (2002), and that for the noncentral case is from Forchini
(2005) (with apparent errors corrected).  As in other functions of
this package, these are evaluated with the recursive algorithm for
\eqn{d} in Hillier et al. (2009, 2014).

The density is undefined at the eigenvalues of \eqn{\mathbf{A}}{A}
(Hillier 2001) and the distribution function has points of nonanalyticity
at the relative eigenvalues of the argument matrices (Forchini 2002).  Around
these points, the expression tends to be \emph{very slow} to converge.  In
this case, use a large \code{m}, or seek alternative ways of evaluation.
}
\examples{
## Some symmetric matrices and parameters
nv <- 4
A <- diag(nv:1)
B <- diag(sqrt(1:nv))
mu <- 0.2 * nv:1
Sigma <- matrix(0.5, nv, nv)
diag(Sigma) <- 1

## f(2.5) for (x^T A x) / (x^T x) where x ~ N(0, I)
dqfr(2.5, A)

## P{ (x^T A x) / (x^T x) <= 2.5} where x ~ N(0, I)
pqfr(2.5, A)

## P{ (x^T A x) / (x^T B x) <= 1.5} where x ~ N(0, I)
pqfr(1.5, A, B)

## P{ (x^T A x) / (x^T B x) <= 1.5} where x ~ N(mu, I)
pqfr(1.5, A, B, mu = mu)

## P{ (x^T A x) / (x^T B x) <= 1.5} where x ~ N(mu, Sigma)
pqfr(1.5, A, B, mu = mu, Sigma = Sigma)

## These are (pseudo-)vectorized
qs <- 0:nv + 0.5
dqfr(qs, A)
pqfr(qs, A, B, mu = mu, Sigma = Sigma)

}
\references{
Forchini, G. (2002) The exact cumulative distribution function of
a ratio of quadratic forms in normal variables, with application to
the AR(1) model. \emph{Econometric Theory}, \strong{18}, 823--852.
\doi{10.1017/S0266466602184015}.

Forchini, G. (2005) The distribution of a ratio of quadratic forms in
noncentral normal variables.
\emph{Communications in Statistics---Theory and Methods}, \strong{34}, 999--1008.
\doi{10.1081/STA-200056855}.

Hillier, G. (2001) The density of quadratic form in a vector uniformly
distributed on the \eqn{n}-sphere.
\emph{Econometric Theory}, \strong{17}, 1--28.
\doi{10.1017/S026646660117101X}.

Hillier, G., Kan, R. and Wang, X. (2009) Computationally efficient recursions
for top-order invariant polynomials with applications.
\emph{Econometric Theory}, \strong{25}, 211--242.
\doi{10.1017/S0266466608090075}.

Hillier, G., Kan, R. and Wang, X. (2014) Generating functions and
short recursions, with applications to the moments of quadratic forms
in noncentral normal vectors. \emph{Econometric Theory}, \strong{30}, 436--473.
\doi{10.1017/S0266466613000364}.
}
